#pragma once
{{#include_headfiles}}
#include "{{headfile_name}}"
{
    { / include_headfiles }
}
namespace Ethereal
{
    {
        {
#class_defines
        }
    }
    template <>
    YNode Serializer::write(const {{class_name}} & instance) {
        YNode ret_context;
        {
            {
#class_base_class_defines
            }
        }
        auto&& yaml_context_{{class_base_class_index}} = Serializer::write(*({{class_base_class_name}}*)&instance);
        assert(!yaml_context_{{class_base_class_index}}.IsNull());
        ret_context = yaml_context_{{class_base_class_index}};
        {{ / class_base_class_defines}} {{#class_field_defines}} {
            {
#class_field_is_vector
            }
        }
        YNode {
            { class_field_name }
        }
        _yaml;
        for (auto& item : instance.{{class_field_name}}) {
            {
                { class_field_name }
            }
            _yaml.push_back(Serializer::write(item));
        }
        ret_context["{{class_field_display_name}}"] = { {class_field_name} } _yaml;
        {{ / class_field_is_vector}} {
            { ^class_field_is_vector }
        }
        ret_context["{{class_field_display_name}}"] = Serializer::write(instance.{{class_field_name}});
        {{ / class_field_is_vector}} {
            { / class_field_defines }
        }
        return ret_context;
    }
    template <>
        {{class_name}} & Serializer::read(const YNode& yaml_context, {{class_name}} & instance) {
        assert(!yaml_context.IsNull());
        {
            {
#class_base_class_defines
            }
        }
        Serializer::read(yaml_context, *({{class_base_class_name}}*)&instance);
        {{ / class_base_class_defines}} {
            {
#class_field_defines
            }
        }
        if (!yaml_context["{{class_field_display_name}}"].IsNull()) {
            {
                {
#class_field_is_vector
                }
            }
            assert(yaml_context["{{class_field_display_name}}"].IsSequence());
            YNode array_{{class_field_name}} = yaml_context["{{class_field_display_name}}"];
            instance.{{class_field_name}}.resize(array_{{class_field_name}}.size());
            for (size_t index = 0; index < array_{{class_field_name}}.size(); ++index) {
                Serializer::read(array_{{class_field_name}}[index], instance.{{class_field_name}}[index]);
            }
            {{ / class_field_is_vector}} {
                { ^class_field_is_vector }
            }
            Serializer::read(yaml_context["{{class_field_display_name}}"], instance.{{class_field_name}});
            {
                { / class_field_is_vector }
            }
        }
        {
            { / class_field_defines }
        }
        return instance;
    }
    {
        { / class_defines }
    }

}  // namespace Ethereal
